// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/v1/bigtable_data.proto

package com.google.bigtable.v1;

/**
 * Protobuf type {@code google.bigtable.v1.Mutation}
 *
 * <pre>
 * Specifies a particular change to be made to the contents of a row.
 * </pre>
 */
public  final class Mutation extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:google.bigtable.v1.Mutation)
    MutationOrBuilder {
  // Use Mutation.newBuilder() to construct.
  private Mutation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Mutation() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Mutation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.bigtable.v1.Mutation.SetCell.Builder subBuilder = null;
            if (mutationCase_ == 1) {
              subBuilder = ((com.google.bigtable.v1.Mutation.SetCell) mutation_).toBuilder();
            }
            mutation_ =
                input.readMessage(com.google.bigtable.v1.Mutation.SetCell.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.bigtable.v1.Mutation.SetCell) mutation_);
              mutation_ = subBuilder.buildPartial();
            }
            mutationCase_ = 1;
            break;
          }
          case 18: {
            com.google.bigtable.v1.Mutation.DeleteFromColumn.Builder subBuilder = null;
            if (mutationCase_ == 2) {
              subBuilder = ((com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_).toBuilder();
            }
            mutation_ =
                input.readMessage(com.google.bigtable.v1.Mutation.DeleteFromColumn.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_);
              mutation_ = subBuilder.buildPartial();
            }
            mutationCase_ = 2;
            break;
          }
          case 26: {
            com.google.bigtable.v1.Mutation.DeleteFromFamily.Builder subBuilder = null;
            if (mutationCase_ == 3) {
              subBuilder = ((com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_).toBuilder();
            }
            mutation_ =
                input.readMessage(com.google.bigtable.v1.Mutation.DeleteFromFamily.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_);
              mutation_ = subBuilder.buildPartial();
            }
            mutationCase_ = 3;
            break;
          }
          case 34: {
            com.google.bigtable.v1.Mutation.DeleteFromRow.Builder subBuilder = null;
            if (mutationCase_ == 4) {
              subBuilder = ((com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_).toBuilder();
            }
            mutation_ =
                input.readMessage(com.google.bigtable.v1.Mutation.DeleteFromRow.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_);
              mutation_ = subBuilder.buildPartial();
            }
            mutationCase_ = 4;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.bigtable.v1.Mutation.class, com.google.bigtable.v1.Mutation.Builder.class);
  }

  public interface SetCellOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.bigtable.v1.Mutation.SetCell)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family into which new data should be written.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    java.lang.String getFamilyName();
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family into which new data should be written.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    com.google.protobuf.ByteString
        getFamilyNameBytes();

    /**
     * <code>optional bytes column_qualifier = 2;</code>
     *
     * <pre>
     * The qualifier of the column into which new data should be written.
     * Can be any byte string, including the empty string.
     * </pre>
     */
    com.google.protobuf.ByteString getColumnQualifier();

    /**
     * <code>optional int64 timestamp_micros = 3;</code>
     *
     * <pre>
     * The timestamp of the cell into which new data should be written.
     * Use -1 for current Bigtable server time.
     * Otherwise, the client should set this value itself, noting that the
     * default value is a timestamp of zero if the field is left unspecified.
     * Values must match the "granularity" of the table (e.g. micros, millis).
     * </pre>
     */
    long getTimestampMicros();

    /**
     * <code>optional bytes value = 4;</code>
     *
     * <pre>
     * The value to be written into the specified cell.
     * </pre>
     */
    com.google.protobuf.ByteString getValue();
  }
  /**
   * Protobuf type {@code google.bigtable.v1.Mutation.SetCell}
   *
   * <pre>
   * A Mutation which sets the value of the specified cell.
   * </pre>
   */
  public  static final class SetCell extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:google.bigtable.v1.Mutation.SetCell)
      SetCellOrBuilder {
    // Use SetCell.newBuilder() to construct.
    private SetCell(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SetCell() {
      familyName_ = "";
      columnQualifier_ = com.google.protobuf.ByteString.EMPTY;
      timestampMicros_ = 0L;
      value_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SetCell(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              familyName_ = s;
              break;
            }
            case 18: {

              columnQualifier_ = input.readBytes();
              break;
            }
            case 24: {

              timestampMicros_ = input.readInt64();
              break;
            }
            case 34: {

              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_SetCell_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_SetCell_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v1.Mutation.SetCell.class, com.google.bigtable.v1.Mutation.SetCell.Builder.class);
    }

    public static final int FAMILY_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object familyName_;
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family into which new data should be written.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    public java.lang.String getFamilyName() {
      java.lang.Object ref = familyName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        familyName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family into which new data should be written.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFamilyNameBytes() {
      java.lang.Object ref = familyName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        familyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLUMN_QUALIFIER_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString columnQualifier_;
    /**
     * <code>optional bytes column_qualifier = 2;</code>
     *
     * <pre>
     * The qualifier of the column into which new data should be written.
     * Can be any byte string, including the empty string.
     * </pre>
     */
    public com.google.protobuf.ByteString getColumnQualifier() {
      return columnQualifier_;
    }

    public static final int TIMESTAMP_MICROS_FIELD_NUMBER = 3;
    private long timestampMicros_;
    /**
     * <code>optional int64 timestamp_micros = 3;</code>
     *
     * <pre>
     * The timestamp of the cell into which new data should be written.
     * Use -1 for current Bigtable server time.
     * Otherwise, the client should set this value itself, noting that the
     * default value is a timestamp of zero if the field is left unspecified.
     * Values must match the "granularity" of the table (e.g. micros, millis).
     * </pre>
     */
    public long getTimestampMicros() {
      return timestampMicros_;
    }

    public static final int VALUE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>optional bytes value = 4;</code>
     *
     * <pre>
     * The value to be written into the specified cell.
     * </pre>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFamilyNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, familyName_);
      }
      if (!columnQualifier_.isEmpty()) {
        output.writeBytes(2, columnQualifier_);
      }
      if (timestampMicros_ != 0L) {
        output.writeInt64(3, timestampMicros_);
      }
      if (!value_.isEmpty()) {
        output.writeBytes(4, value_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFamilyNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, familyName_);
      }
      if (!columnQualifier_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, columnQualifier_);
      }
      if (timestampMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timestampMicros_);
      }
      if (!value_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, value_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.SetCell parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.bigtable.v1.Mutation.SetCell prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.bigtable.v1.Mutation.SetCell}
     *
     * <pre>
     * A Mutation which sets the value of the specified cell.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.bigtable.v1.Mutation.SetCell)
        com.google.bigtable.v1.Mutation.SetCellOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_SetCell_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_SetCell_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.bigtable.v1.Mutation.SetCell.class, com.google.bigtable.v1.Mutation.SetCell.Builder.class);
      }

      // Construct using com.google.bigtable.v1.Mutation.SetCell.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        familyName_ = "";

        columnQualifier_ = com.google.protobuf.ByteString.EMPTY;

        timestampMicros_ = 0L;

        value_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_SetCell_descriptor;
      }

      public com.google.bigtable.v1.Mutation.SetCell getDefaultInstanceForType() {
        return com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance();
      }

      public com.google.bigtable.v1.Mutation.SetCell build() {
        com.google.bigtable.v1.Mutation.SetCell result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.bigtable.v1.Mutation.SetCell buildPartial() {
        com.google.bigtable.v1.Mutation.SetCell result = new com.google.bigtable.v1.Mutation.SetCell(this);
        result.familyName_ = familyName_;
        result.columnQualifier_ = columnQualifier_;
        result.timestampMicros_ = timestampMicros_;
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.bigtable.v1.Mutation.SetCell) {
          return mergeFrom((com.google.bigtable.v1.Mutation.SetCell)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.bigtable.v1.Mutation.SetCell other) {
        if (other == com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance()) return this;
        if (!other.getFamilyName().isEmpty()) {
          familyName_ = other.familyName_;
          onChanged();
        }
        if (other.getColumnQualifier() != com.google.protobuf.ByteString.EMPTY) {
          setColumnQualifier(other.getColumnQualifier());
        }
        if (other.getTimestampMicros() != 0L) {
          setTimestampMicros(other.getTimestampMicros());
        }
        if (other.getValue() != com.google.protobuf.ByteString.EMPTY) {
          setValue(other.getValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.bigtable.v1.Mutation.SetCell parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.bigtable.v1.Mutation.SetCell) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object familyName_ = "";
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family into which new data should be written.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public java.lang.String getFamilyName() {
        java.lang.Object ref = familyName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          familyName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family into which new data should be written.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFamilyNameBytes() {
        java.lang.Object ref = familyName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          familyName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family into which new data should be written.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder setFamilyName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        familyName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family into which new data should be written.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder clearFamilyName() {
        
        familyName_ = getDefaultInstance().getFamilyName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family into which new data should be written.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder setFamilyNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        familyName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString columnQualifier_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes column_qualifier = 2;</code>
       *
       * <pre>
       * The qualifier of the column into which new data should be written.
       * Can be any byte string, including the empty string.
       * </pre>
       */
      public com.google.protobuf.ByteString getColumnQualifier() {
        return columnQualifier_;
      }
      /**
       * <code>optional bytes column_qualifier = 2;</code>
       *
       * <pre>
       * The qualifier of the column into which new data should be written.
       * Can be any byte string, including the empty string.
       * </pre>
       */
      public Builder setColumnQualifier(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        columnQualifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes column_qualifier = 2;</code>
       *
       * <pre>
       * The qualifier of the column into which new data should be written.
       * Can be any byte string, including the empty string.
       * </pre>
       */
      public Builder clearColumnQualifier() {
        
        columnQualifier_ = getDefaultInstance().getColumnQualifier();
        onChanged();
        return this;
      }

      private long timestampMicros_ ;
      /**
       * <code>optional int64 timestamp_micros = 3;</code>
       *
       * <pre>
       * The timestamp of the cell into which new data should be written.
       * Use -1 for current Bigtable server time.
       * Otherwise, the client should set this value itself, noting that the
       * default value is a timestamp of zero if the field is left unspecified.
       * Values must match the "granularity" of the table (e.g. micros, millis).
       * </pre>
       */
      public long getTimestampMicros() {
        return timestampMicros_;
      }
      /**
       * <code>optional int64 timestamp_micros = 3;</code>
       *
       * <pre>
       * The timestamp of the cell into which new data should be written.
       * Use -1 for current Bigtable server time.
       * Otherwise, the client should set this value itself, noting that the
       * default value is a timestamp of zero if the field is left unspecified.
       * Values must match the "granularity" of the table (e.g. micros, millis).
       * </pre>
       */
      public Builder setTimestampMicros(long value) {
        
        timestampMicros_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 timestamp_micros = 3;</code>
       *
       * <pre>
       * The timestamp of the cell into which new data should be written.
       * Use -1 for current Bigtable server time.
       * Otherwise, the client should set this value itself, noting that the
       * default value is a timestamp of zero if the field is left unspecified.
       * Values must match the "granularity" of the table (e.g. micros, millis).
       * </pre>
       */
      public Builder clearTimestampMicros() {
        
        timestampMicros_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes value = 4;</code>
       *
       * <pre>
       * The value to be written into the specified cell.
       * </pre>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>optional bytes value = 4;</code>
       *
       * <pre>
       * The value to be written into the specified cell.
       * </pre>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes value = 4;</code>
       *
       * <pre>
       * The value to be written into the specified cell.
       * </pre>
       */
      public Builder clearValue() {
        
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.bigtable.v1.Mutation.SetCell)
    }

    // @@protoc_insertion_point(class_scope:google.bigtable.v1.Mutation.SetCell)
    private static final com.google.bigtable.v1.Mutation.SetCell DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.bigtable.v1.Mutation.SetCell();
    }

    public static com.google.bigtable.v1.Mutation.SetCell getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SetCell>
        PARSER = new com.google.protobuf.AbstractParser<SetCell>() {
      public SetCell parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new SetCell(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<SetCell> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SetCell> getParserForType() {
      return PARSER;
    }

    public com.google.bigtable.v1.Mutation.SetCell getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteFromColumnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.bigtable.v1.Mutation.DeleteFromColumn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    java.lang.String getFamilyName();
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    com.google.protobuf.ByteString
        getFamilyNameBytes();

    /**
     * <code>optional bytes column_qualifier = 2;</code>
     *
     * <pre>
     * The qualifier of the column from which cells should be deleted.
     * Can be any byte string, including the empty string.
     * </pre>
     */
    com.google.protobuf.ByteString getColumnQualifier();

    /**
     * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
     *
     * <pre>
     * The range of timestamps within which cells should be deleted.
     * </pre>
     */
    boolean hasTimeRange();
    /**
     * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
     *
     * <pre>
     * The range of timestamps within which cells should be deleted.
     * </pre>
     */
    com.google.bigtable.v1.TimestampRange getTimeRange();
    /**
     * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
     *
     * <pre>
     * The range of timestamps within which cells should be deleted.
     * </pre>
     */
    com.google.bigtable.v1.TimestampRangeOrBuilder getTimeRangeOrBuilder();
  }
  /**
   * Protobuf type {@code google.bigtable.v1.Mutation.DeleteFromColumn}
   *
   * <pre>
   * A Mutation which deletes cells from the specified column, optionally
   * restricting the deletions to a given timestamp range.
   * </pre>
   */
  public  static final class DeleteFromColumn extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:google.bigtable.v1.Mutation.DeleteFromColumn)
      DeleteFromColumnOrBuilder {
    // Use DeleteFromColumn.newBuilder() to construct.
    private DeleteFromColumn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DeleteFromColumn() {
      familyName_ = "";
      columnQualifier_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DeleteFromColumn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              familyName_ = s;
              break;
            }
            case 18: {

              columnQualifier_ = input.readBytes();
              break;
            }
            case 26: {
              com.google.bigtable.v1.TimestampRange.Builder subBuilder = null;
              if (timeRange_ != null) {
                subBuilder = timeRange_.toBuilder();
              }
              timeRange_ = input.readMessage(com.google.bigtable.v1.TimestampRange.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timeRange_);
                timeRange_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromColumn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromColumn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v1.Mutation.DeleteFromColumn.class, com.google.bigtable.v1.Mutation.DeleteFromColumn.Builder.class);
    }

    public static final int FAMILY_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object familyName_;
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    public java.lang.String getFamilyName() {
      java.lang.Object ref = familyName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        familyName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFamilyNameBytes() {
      java.lang.Object ref = familyName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        familyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLUMN_QUALIFIER_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString columnQualifier_;
    /**
     * <code>optional bytes column_qualifier = 2;</code>
     *
     * <pre>
     * The qualifier of the column from which cells should be deleted.
     * Can be any byte string, including the empty string.
     * </pre>
     */
    public com.google.protobuf.ByteString getColumnQualifier() {
      return columnQualifier_;
    }

    public static final int TIME_RANGE_FIELD_NUMBER = 3;
    private com.google.bigtable.v1.TimestampRange timeRange_;
    /**
     * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
     *
     * <pre>
     * The range of timestamps within which cells should be deleted.
     * </pre>
     */
    public boolean hasTimeRange() {
      return timeRange_ != null;
    }
    /**
     * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
     *
     * <pre>
     * The range of timestamps within which cells should be deleted.
     * </pre>
     */
    public com.google.bigtable.v1.TimestampRange getTimeRange() {
      return timeRange_ == null ? com.google.bigtable.v1.TimestampRange.getDefaultInstance() : timeRange_;
    }
    /**
     * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
     *
     * <pre>
     * The range of timestamps within which cells should be deleted.
     * </pre>
     */
    public com.google.bigtable.v1.TimestampRangeOrBuilder getTimeRangeOrBuilder() {
      return getTimeRange();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFamilyNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, familyName_);
      }
      if (!columnQualifier_.isEmpty()) {
        output.writeBytes(2, columnQualifier_);
      }
      if (timeRange_ != null) {
        output.writeMessage(3, getTimeRange());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFamilyNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, familyName_);
      }
      if (!columnQualifier_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, columnQualifier_);
      }
      if (timeRange_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTimeRange());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromColumn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.bigtable.v1.Mutation.DeleteFromColumn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.bigtable.v1.Mutation.DeleteFromColumn}
     *
     * <pre>
     * A Mutation which deletes cells from the specified column, optionally
     * restricting the deletions to a given timestamp range.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.bigtable.v1.Mutation.DeleteFromColumn)
        com.google.bigtable.v1.Mutation.DeleteFromColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromColumn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromColumn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.bigtable.v1.Mutation.DeleteFromColumn.class, com.google.bigtable.v1.Mutation.DeleteFromColumn.Builder.class);
      }

      // Construct using com.google.bigtable.v1.Mutation.DeleteFromColumn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        familyName_ = "";

        columnQualifier_ = com.google.protobuf.ByteString.EMPTY;

        if (timeRangeBuilder_ == null) {
          timeRange_ = null;
        } else {
          timeRange_ = null;
          timeRangeBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromColumn_descriptor;
      }

      public com.google.bigtable.v1.Mutation.DeleteFromColumn getDefaultInstanceForType() {
        return com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance();
      }

      public com.google.bigtable.v1.Mutation.DeleteFromColumn build() {
        com.google.bigtable.v1.Mutation.DeleteFromColumn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.bigtable.v1.Mutation.DeleteFromColumn buildPartial() {
        com.google.bigtable.v1.Mutation.DeleteFromColumn result = new com.google.bigtable.v1.Mutation.DeleteFromColumn(this);
        result.familyName_ = familyName_;
        result.columnQualifier_ = columnQualifier_;
        if (timeRangeBuilder_ == null) {
          result.timeRange_ = timeRange_;
        } else {
          result.timeRange_ = timeRangeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.bigtable.v1.Mutation.DeleteFromColumn) {
          return mergeFrom((com.google.bigtable.v1.Mutation.DeleteFromColumn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.bigtable.v1.Mutation.DeleteFromColumn other) {
        if (other == com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance()) return this;
        if (!other.getFamilyName().isEmpty()) {
          familyName_ = other.familyName_;
          onChanged();
        }
        if (other.getColumnQualifier() != com.google.protobuf.ByteString.EMPTY) {
          setColumnQualifier(other.getColumnQualifier());
        }
        if (other.hasTimeRange()) {
          mergeTimeRange(other.getTimeRange());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.bigtable.v1.Mutation.DeleteFromColumn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.bigtable.v1.Mutation.DeleteFromColumn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object familyName_ = "";
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public java.lang.String getFamilyName() {
        java.lang.Object ref = familyName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          familyName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFamilyNameBytes() {
        java.lang.Object ref = familyName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          familyName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder setFamilyName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        familyName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder clearFamilyName() {
        
        familyName_ = getDefaultInstance().getFamilyName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder setFamilyNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        familyName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString columnQualifier_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes column_qualifier = 2;</code>
       *
       * <pre>
       * The qualifier of the column from which cells should be deleted.
       * Can be any byte string, including the empty string.
       * </pre>
       */
      public com.google.protobuf.ByteString getColumnQualifier() {
        return columnQualifier_;
      }
      /**
       * <code>optional bytes column_qualifier = 2;</code>
       *
       * <pre>
       * The qualifier of the column from which cells should be deleted.
       * Can be any byte string, including the empty string.
       * </pre>
       */
      public Builder setColumnQualifier(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        columnQualifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes column_qualifier = 2;</code>
       *
       * <pre>
       * The qualifier of the column from which cells should be deleted.
       * Can be any byte string, including the empty string.
       * </pre>
       */
      public Builder clearColumnQualifier() {
        
        columnQualifier_ = getDefaultInstance().getColumnQualifier();
        onChanged();
        return this;
      }

      private com.google.bigtable.v1.TimestampRange timeRange_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          com.google.bigtable.v1.TimestampRange, com.google.bigtable.v1.TimestampRange.Builder, com.google.bigtable.v1.TimestampRangeOrBuilder> timeRangeBuilder_;
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public boolean hasTimeRange() {
        return timeRangeBuilder_ != null || timeRange_ != null;
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public com.google.bigtable.v1.TimestampRange getTimeRange() {
        if (timeRangeBuilder_ == null) {
          return timeRange_ == null ? com.google.bigtable.v1.TimestampRange.getDefaultInstance() : timeRange_;
        } else {
          return timeRangeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public Builder setTimeRange(com.google.bigtable.v1.TimestampRange value) {
        if (timeRangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timeRange_ = value;
          onChanged();
        } else {
          timeRangeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public Builder setTimeRange(
          com.google.bigtable.v1.TimestampRange.Builder builderForValue) {
        if (timeRangeBuilder_ == null) {
          timeRange_ = builderForValue.build();
          onChanged();
        } else {
          timeRangeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public Builder mergeTimeRange(com.google.bigtable.v1.TimestampRange value) {
        if (timeRangeBuilder_ == null) {
          if (timeRange_ != null) {
            timeRange_ =
              com.google.bigtable.v1.TimestampRange.newBuilder(timeRange_).mergeFrom(value).buildPartial();
          } else {
            timeRange_ = value;
          }
          onChanged();
        } else {
          timeRangeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public Builder clearTimeRange() {
        if (timeRangeBuilder_ == null) {
          timeRange_ = null;
          onChanged();
        } else {
          timeRange_ = null;
          timeRangeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public com.google.bigtable.v1.TimestampRange.Builder getTimeRangeBuilder() {
        
        onChanged();
        return getTimeRangeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      public com.google.bigtable.v1.TimestampRangeOrBuilder getTimeRangeOrBuilder() {
        if (timeRangeBuilder_ != null) {
          return timeRangeBuilder_.getMessageOrBuilder();
        } else {
          return timeRange_ == null ?
              com.google.bigtable.v1.TimestampRange.getDefaultInstance() : timeRange_;
        }
      }
      /**
       * <code>optional .google.bigtable.v1.TimestampRange time_range = 3;</code>
       *
       * <pre>
       * The range of timestamps within which cells should be deleted.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.google.bigtable.v1.TimestampRange, com.google.bigtable.v1.TimestampRange.Builder, com.google.bigtable.v1.TimestampRangeOrBuilder> 
          getTimeRangeFieldBuilder() {
        if (timeRangeBuilder_ == null) {
          timeRangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<>(
                  getTimeRange(),
                  getParentForChildren(),
                  isClean());
          timeRange_ = null;
        }
        return timeRangeBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.bigtable.v1.Mutation.DeleteFromColumn)
    }

    // @@protoc_insertion_point(class_scope:google.bigtable.v1.Mutation.DeleteFromColumn)
    private static final com.google.bigtable.v1.Mutation.DeleteFromColumn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.bigtable.v1.Mutation.DeleteFromColumn();
    }

    public static com.google.bigtable.v1.Mutation.DeleteFromColumn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeleteFromColumn>
        PARSER = new com.google.protobuf.AbstractParser<DeleteFromColumn>() {
      public DeleteFromColumn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new DeleteFromColumn(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<DeleteFromColumn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteFromColumn> getParserForType() {
      return PARSER;
    }

    public com.google.bigtable.v1.Mutation.DeleteFromColumn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteFromFamilyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.bigtable.v1.Mutation.DeleteFromFamily)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    java.lang.String getFamilyName();
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    com.google.protobuf.ByteString
        getFamilyNameBytes();
  }
  /**
   * Protobuf type {@code google.bigtable.v1.Mutation.DeleteFromFamily}
   *
   * <pre>
   * A Mutation which deletes all cells from the specified column family.
   * </pre>
   */
  public  static final class DeleteFromFamily extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:google.bigtable.v1.Mutation.DeleteFromFamily)
      DeleteFromFamilyOrBuilder {
    // Use DeleteFromFamily.newBuilder() to construct.
    private DeleteFromFamily(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DeleteFromFamily() {
      familyName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DeleteFromFamily(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              familyName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromFamily_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromFamily_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v1.Mutation.DeleteFromFamily.class, com.google.bigtable.v1.Mutation.DeleteFromFamily.Builder.class);
    }

    public static final int FAMILY_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object familyName_;
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    public java.lang.String getFamilyName() {
      java.lang.Object ref = familyName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        familyName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string family_name = 1;</code>
     *
     * <pre>
     * The name of the family from which cells should be deleted.
     * Must match [-_.a-zA-Z0-9]+
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFamilyNameBytes() {
      java.lang.Object ref = familyName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        familyName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFamilyNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, familyName_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFamilyNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, familyName_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromFamily parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.bigtable.v1.Mutation.DeleteFromFamily prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.bigtable.v1.Mutation.DeleteFromFamily}
     *
     * <pre>
     * A Mutation which deletes all cells from the specified column family.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.bigtable.v1.Mutation.DeleteFromFamily)
        com.google.bigtable.v1.Mutation.DeleteFromFamilyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromFamily_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromFamily_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.bigtable.v1.Mutation.DeleteFromFamily.class, com.google.bigtable.v1.Mutation.DeleteFromFamily.Builder.class);
      }

      // Construct using com.google.bigtable.v1.Mutation.DeleteFromFamily.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        familyName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromFamily_descriptor;
      }

      public com.google.bigtable.v1.Mutation.DeleteFromFamily getDefaultInstanceForType() {
        return com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance();
      }

      public com.google.bigtable.v1.Mutation.DeleteFromFamily build() {
        com.google.bigtable.v1.Mutation.DeleteFromFamily result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.bigtable.v1.Mutation.DeleteFromFamily buildPartial() {
        com.google.bigtable.v1.Mutation.DeleteFromFamily result = new com.google.bigtable.v1.Mutation.DeleteFromFamily(this);
        result.familyName_ = familyName_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.bigtable.v1.Mutation.DeleteFromFamily) {
          return mergeFrom((com.google.bigtable.v1.Mutation.DeleteFromFamily)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.bigtable.v1.Mutation.DeleteFromFamily other) {
        if (other == com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance()) return this;
        if (!other.getFamilyName().isEmpty()) {
          familyName_ = other.familyName_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.bigtable.v1.Mutation.DeleteFromFamily parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.bigtable.v1.Mutation.DeleteFromFamily) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object familyName_ = "";
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public java.lang.String getFamilyName() {
        java.lang.Object ref = familyName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          familyName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFamilyNameBytes() {
        java.lang.Object ref = familyName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          familyName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder setFamilyName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        familyName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder clearFamilyName() {
        
        familyName_ = getDefaultInstance().getFamilyName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string family_name = 1;</code>
       *
       * <pre>
       * The name of the family from which cells should be deleted.
       * Must match [-_.a-zA-Z0-9]+
       * </pre>
       */
      public Builder setFamilyNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        familyName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.bigtable.v1.Mutation.DeleteFromFamily)
    }

    // @@protoc_insertion_point(class_scope:google.bigtable.v1.Mutation.DeleteFromFamily)
    private static final com.google.bigtable.v1.Mutation.DeleteFromFamily DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.bigtable.v1.Mutation.DeleteFromFamily();
    }

    public static com.google.bigtable.v1.Mutation.DeleteFromFamily getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeleteFromFamily>
        PARSER = new com.google.protobuf.AbstractParser<DeleteFromFamily>() {
      public DeleteFromFamily parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new DeleteFromFamily(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<DeleteFromFamily> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteFromFamily> getParserForType() {
      return PARSER;
    }

    public com.google.bigtable.v1.Mutation.DeleteFromFamily getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteFromRowOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.bigtable.v1.Mutation.DeleteFromRow)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code google.bigtable.v1.Mutation.DeleteFromRow}
   *
   * <pre>
   * A Mutation which deletes all cells from the containing row.
   * </pre>
   */
  public  static final class DeleteFromRow extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:google.bigtable.v1.Mutation.DeleteFromRow)
      DeleteFromRowOrBuilder {
    // Use DeleteFromRow.newBuilder() to construct.
    private DeleteFromRow(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DeleteFromRow() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DeleteFromRow(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromRow_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromRow_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v1.Mutation.DeleteFromRow.class, com.google.bigtable.v1.Mutation.DeleteFromRow.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.bigtable.v1.Mutation.DeleteFromRow parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.google.bigtable.v1.Mutation.DeleteFromRow prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code google.bigtable.v1.Mutation.DeleteFromRow}
     *
     * <pre>
     * A Mutation which deletes all cells from the containing row.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:google.bigtable.v1.Mutation.DeleteFromRow)
        com.google.bigtable.v1.Mutation.DeleteFromRowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromRow_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromRow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.bigtable.v1.Mutation.DeleteFromRow.class, com.google.bigtable.v1.Mutation.DeleteFromRow.Builder.class);
      }

      // Construct using com.google.bigtable.v1.Mutation.DeleteFromRow.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_DeleteFromRow_descriptor;
      }

      public com.google.bigtable.v1.Mutation.DeleteFromRow getDefaultInstanceForType() {
        return com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance();
      }

      public com.google.bigtable.v1.Mutation.DeleteFromRow build() {
        com.google.bigtable.v1.Mutation.DeleteFromRow result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.bigtable.v1.Mutation.DeleteFromRow buildPartial() {
        com.google.bigtable.v1.Mutation.DeleteFromRow result = new com.google.bigtable.v1.Mutation.DeleteFromRow(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.bigtable.v1.Mutation.DeleteFromRow) {
          return mergeFrom((com.google.bigtable.v1.Mutation.DeleteFromRow)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.bigtable.v1.Mutation.DeleteFromRow other) {
        if (other == com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.bigtable.v1.Mutation.DeleteFromRow parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.bigtable.v1.Mutation.DeleteFromRow) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:google.bigtable.v1.Mutation.DeleteFromRow)
    }

    // @@protoc_insertion_point(class_scope:google.bigtable.v1.Mutation.DeleteFromRow)
    private static final com.google.bigtable.v1.Mutation.DeleteFromRow DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.google.bigtable.v1.Mutation.DeleteFromRow();
    }

    public static com.google.bigtable.v1.Mutation.DeleteFromRow getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeleteFromRow>
        PARSER = new com.google.protobuf.AbstractParser<DeleteFromRow>() {
      public DeleteFromRow parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new DeleteFromRow(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<DeleteFromRow> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteFromRow> getParserForType() {
      return PARSER;
    }

    public com.google.bigtable.v1.Mutation.DeleteFromRow getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int mutationCase_ = 0;
  private java.lang.Object mutation_;
  public enum MutationCase
      implements com.google.protobuf.Internal.EnumLite {
    SET_CELL(1),
    DELETE_FROM_COLUMN(2),
    DELETE_FROM_FAMILY(3),
    DELETE_FROM_ROW(4),
    MUTATION_NOT_SET(0);
    private int value = 0;
    private MutationCase(int value) {
      this.value = value;
    }
    public static MutationCase valueOf(int value) {
      switch (value) {
        case 1: return SET_CELL;
        case 2: return DELETE_FROM_COLUMN;
        case 3: return DELETE_FROM_FAMILY;
        case 4: return DELETE_FROM_ROW;
        case 0: return MUTATION_NOT_SET;
        default: throw new java.lang.IllegalArgumentException(
          "Value is undefined for this oneof enum.");
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public MutationCase
  getMutationCase() {
    return MutationCase.valueOf(
        mutationCase_);
  }

  public static final int SET_CELL_FIELD_NUMBER = 1;
  /**
   * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
   *
   * <pre>
   * Set a cell's value.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.SetCell getSetCell() {
    if (mutationCase_ == 1) {
       return (com.google.bigtable.v1.Mutation.SetCell) mutation_;
    }
    return com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance();
  }
  /**
   * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
   *
   * <pre>
   * Set a cell's value.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.SetCellOrBuilder getSetCellOrBuilder() {
    if (mutationCase_ == 1) {
       return (com.google.bigtable.v1.Mutation.SetCell) mutation_;
    }
    return com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance();
  }

  public static final int DELETE_FROM_COLUMN_FIELD_NUMBER = 2;
  /**
   * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
   *
   * <pre>
   * Deletes cells from a column.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.DeleteFromColumn getDeleteFromColumn() {
    if (mutationCase_ == 2) {
       return (com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_;
    }
    return com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance();
  }
  /**
   * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
   *
   * <pre>
   * Deletes cells from a column.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.DeleteFromColumnOrBuilder getDeleteFromColumnOrBuilder() {
    if (mutationCase_ == 2) {
       return (com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_;
    }
    return com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance();
  }

  public static final int DELETE_FROM_FAMILY_FIELD_NUMBER = 3;
  /**
   * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
   *
   * <pre>
   * Deletes cells from a column family.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.DeleteFromFamily getDeleteFromFamily() {
    if (mutationCase_ == 3) {
       return (com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_;
    }
    return com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance();
  }
  /**
   * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
   *
   * <pre>
   * Deletes cells from a column family.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.DeleteFromFamilyOrBuilder getDeleteFromFamilyOrBuilder() {
    if (mutationCase_ == 3) {
       return (com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_;
    }
    return com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance();
  }

  public static final int DELETE_FROM_ROW_FIELD_NUMBER = 4;
  /**
   * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
   *
   * <pre>
   * Deletes cells from the entire row.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.DeleteFromRow getDeleteFromRow() {
    if (mutationCase_ == 4) {
       return (com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_;
    }
    return com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance();
  }
  /**
   * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
   *
   * <pre>
   * Deletes cells from the entire row.
   * </pre>
   */
  public com.google.bigtable.v1.Mutation.DeleteFromRowOrBuilder getDeleteFromRowOrBuilder() {
    if (mutationCase_ == 4) {
       return (com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_;
    }
    return com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (mutationCase_ == 1) {
      output.writeMessage(1, (com.google.bigtable.v1.Mutation.SetCell) mutation_);
    }
    if (mutationCase_ == 2) {
      output.writeMessage(2, (com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_);
    }
    if (mutationCase_ == 3) {
      output.writeMessage(3, (com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_);
    }
    if (mutationCase_ == 4) {
      output.writeMessage(4, (com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (mutationCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.google.bigtable.v1.Mutation.SetCell) mutation_);
    }
    if (mutationCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_);
    }
    if (mutationCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_);
    }
    if (mutationCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.google.bigtable.v1.Mutation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.v1.Mutation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.v1.Mutation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.v1.Mutation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.v1.Mutation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.v1.Mutation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.v1.Mutation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.google.bigtable.v1.Mutation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.v1.Mutation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.v1.Mutation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.bigtable.v1.Mutation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.bigtable.v1.Mutation}
   *
   * <pre>
   * Specifies a particular change to be made to the contents of a row.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.bigtable.v1.Mutation)
      com.google.bigtable.v1.MutationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.v1.Mutation.class, com.google.bigtable.v1.Mutation.Builder.class);
    }

    // Construct using com.google.bigtable.v1.Mutation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      mutationCase_ = 0;
      mutation_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.bigtable.v1.BigtableDataProto.internal_static_google_bigtable_v1_Mutation_descriptor;
    }

    public com.google.bigtable.v1.Mutation getDefaultInstanceForType() {
      return com.google.bigtable.v1.Mutation.getDefaultInstance();
    }

    public com.google.bigtable.v1.Mutation build() {
      com.google.bigtable.v1.Mutation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.bigtable.v1.Mutation buildPartial() {
      com.google.bigtable.v1.Mutation result = new com.google.bigtable.v1.Mutation(this);
      if (mutationCase_ == 1) {
        if (setCellBuilder_ == null) {
          result.mutation_ = mutation_;
        } else {
          result.mutation_ = setCellBuilder_.build();
        }
      }
      if (mutationCase_ == 2) {
        if (deleteFromColumnBuilder_ == null) {
          result.mutation_ = mutation_;
        } else {
          result.mutation_ = deleteFromColumnBuilder_.build();
        }
      }
      if (mutationCase_ == 3) {
        if (deleteFromFamilyBuilder_ == null) {
          result.mutation_ = mutation_;
        } else {
          result.mutation_ = deleteFromFamilyBuilder_.build();
        }
      }
      if (mutationCase_ == 4) {
        if (deleteFromRowBuilder_ == null) {
          result.mutation_ = mutation_;
        } else {
          result.mutation_ = deleteFromRowBuilder_.build();
        }
      }
      result.mutationCase_ = mutationCase_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.bigtable.v1.Mutation) {
        return mergeFrom((com.google.bigtable.v1.Mutation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.bigtable.v1.Mutation other) {
      if (other == com.google.bigtable.v1.Mutation.getDefaultInstance()) return this;
      switch (other.getMutationCase()) {
        case SET_CELL: {
          mergeSetCell(other.getSetCell());
          break;
        }
        case DELETE_FROM_COLUMN: {
          mergeDeleteFromColumn(other.getDeleteFromColumn());
          break;
        }
        case DELETE_FROM_FAMILY: {
          mergeDeleteFromFamily(other.getDeleteFromFamily());
          break;
        }
        case DELETE_FROM_ROW: {
          mergeDeleteFromRow(other.getDeleteFromRow());
          break;
        }
        case MUTATION_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.bigtable.v1.Mutation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.bigtable.v1.Mutation) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int mutationCase_ = 0;
    private java.lang.Object mutation_;
    public MutationCase
        getMutationCase() {
      return MutationCase.valueOf(
          mutationCase_);
    }

    public Builder clearMutation() {
      mutationCase_ = 0;
      mutation_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.SetCell, com.google.bigtable.v1.Mutation.SetCell.Builder, com.google.bigtable.v1.Mutation.SetCellOrBuilder> setCellBuilder_;
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.SetCell getSetCell() {
      if (setCellBuilder_ == null) {
        if (mutationCase_ == 1) {
          return (com.google.bigtable.v1.Mutation.SetCell) mutation_;
        }
        return com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance();
      } else {
        if (mutationCase_ == 1) {
          return setCellBuilder_.getMessage();
        }
        return com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    public Builder setSetCell(com.google.bigtable.v1.Mutation.SetCell value) {
      if (setCellBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mutation_ = value;
        onChanged();
      } else {
        setCellBuilder_.setMessage(value);
      }
      mutationCase_ = 1;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    public Builder setSetCell(
        com.google.bigtable.v1.Mutation.SetCell.Builder builderForValue) {
      if (setCellBuilder_ == null) {
        mutation_ = builderForValue.build();
        onChanged();
      } else {
        setCellBuilder_.setMessage(builderForValue.build());
      }
      mutationCase_ = 1;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    public Builder mergeSetCell(com.google.bigtable.v1.Mutation.SetCell value) {
      if (setCellBuilder_ == null) {
        if (mutationCase_ == 1 &&
            mutation_ != com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance()) {
          mutation_ = com.google.bigtable.v1.Mutation.SetCell.newBuilder((com.google.bigtable.v1.Mutation.SetCell) mutation_)
              .mergeFrom(value).buildPartial();
        } else {
          mutation_ = value;
        }
        onChanged();
      } else {
        if (mutationCase_ == 1) {
          setCellBuilder_.mergeFrom(value);
        }
        setCellBuilder_.setMessage(value);
      }
      mutationCase_ = 1;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    public Builder clearSetCell() {
      if (setCellBuilder_ == null) {
        if (mutationCase_ == 1) {
          mutationCase_ = 0;
          mutation_ = null;
          onChanged();
        }
      } else {
        if (mutationCase_ == 1) {
          mutationCase_ = 0;
          mutation_ = null;
        }
        setCellBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.SetCell.Builder getSetCellBuilder() {
      return getSetCellFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.SetCellOrBuilder getSetCellOrBuilder() {
      if ((mutationCase_ == 1) && (setCellBuilder_ != null)) {
        return setCellBuilder_.getMessageOrBuilder();
      } else {
        if (mutationCase_ == 1) {
          return (com.google.bigtable.v1.Mutation.SetCell) mutation_;
        }
        return com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.SetCell set_cell = 1;</code>
     *
     * <pre>
     * Set a cell's value.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.SetCell, com.google.bigtable.v1.Mutation.SetCell.Builder, com.google.bigtable.v1.Mutation.SetCellOrBuilder> 
        getSetCellFieldBuilder() {
      if (setCellBuilder_ == null) {
        if (!(mutationCase_ == 1)) {
          mutation_ = com.google.bigtable.v1.Mutation.SetCell.getDefaultInstance();
        }
        setCellBuilder_ = new com.google.protobuf.SingleFieldBuilder<>(
                (com.google.bigtable.v1.Mutation.SetCell) mutation_,
                getParentForChildren(),
                isClean());
        mutation_ = null;
      }
      mutationCase_ = 1;
      onChanged();;
      return setCellBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.DeleteFromColumn, com.google.bigtable.v1.Mutation.DeleteFromColumn.Builder, com.google.bigtable.v1.Mutation.DeleteFromColumnOrBuilder> deleteFromColumnBuilder_;
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromColumn getDeleteFromColumn() {
      if (deleteFromColumnBuilder_ == null) {
        if (mutationCase_ == 2) {
          return (com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_;
        }
        return com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance();
      } else {
        if (mutationCase_ == 2) {
          return deleteFromColumnBuilder_.getMessage();
        }
        return com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    public Builder setDeleteFromColumn(com.google.bigtable.v1.Mutation.DeleteFromColumn value) {
      if (deleteFromColumnBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mutation_ = value;
        onChanged();
      } else {
        deleteFromColumnBuilder_.setMessage(value);
      }
      mutationCase_ = 2;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    public Builder setDeleteFromColumn(
        com.google.bigtable.v1.Mutation.DeleteFromColumn.Builder builderForValue) {
      if (deleteFromColumnBuilder_ == null) {
        mutation_ = builderForValue.build();
        onChanged();
      } else {
        deleteFromColumnBuilder_.setMessage(builderForValue.build());
      }
      mutationCase_ = 2;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    public Builder mergeDeleteFromColumn(com.google.bigtable.v1.Mutation.DeleteFromColumn value) {
      if (deleteFromColumnBuilder_ == null) {
        if (mutationCase_ == 2 &&
            mutation_ != com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance()) {
          mutation_ = com.google.bigtable.v1.Mutation.DeleteFromColumn.newBuilder((com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_)
              .mergeFrom(value).buildPartial();
        } else {
          mutation_ = value;
        }
        onChanged();
      } else {
        if (mutationCase_ == 2) {
          deleteFromColumnBuilder_.mergeFrom(value);
        }
        deleteFromColumnBuilder_.setMessage(value);
      }
      mutationCase_ = 2;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    public Builder clearDeleteFromColumn() {
      if (deleteFromColumnBuilder_ == null) {
        if (mutationCase_ == 2) {
          mutationCase_ = 0;
          mutation_ = null;
          onChanged();
        }
      } else {
        if (mutationCase_ == 2) {
          mutationCase_ = 0;
          mutation_ = null;
        }
        deleteFromColumnBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromColumn.Builder getDeleteFromColumnBuilder() {
      return getDeleteFromColumnFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromColumnOrBuilder getDeleteFromColumnOrBuilder() {
      if ((mutationCase_ == 2) && (deleteFromColumnBuilder_ != null)) {
        return deleteFromColumnBuilder_.getMessageOrBuilder();
      } else {
        if (mutationCase_ == 2) {
          return (com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_;
        }
        return com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromColumn delete_from_column = 2;</code>
     *
     * <pre>
     * Deletes cells from a column.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.DeleteFromColumn, com.google.bigtable.v1.Mutation.DeleteFromColumn.Builder, com.google.bigtable.v1.Mutation.DeleteFromColumnOrBuilder> 
        getDeleteFromColumnFieldBuilder() {
      if (deleteFromColumnBuilder_ == null) {
        if (!(mutationCase_ == 2)) {
          mutation_ = com.google.bigtable.v1.Mutation.DeleteFromColumn.getDefaultInstance();
        }
        deleteFromColumnBuilder_ = new com.google.protobuf.SingleFieldBuilder<>(
                (com.google.bigtable.v1.Mutation.DeleteFromColumn) mutation_,
                getParentForChildren(),
                isClean());
        mutation_ = null;
      }
      mutationCase_ = 2;
      onChanged();;
      return deleteFromColumnBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.DeleteFromFamily, com.google.bigtable.v1.Mutation.DeleteFromFamily.Builder, com.google.bigtable.v1.Mutation.DeleteFromFamilyOrBuilder> deleteFromFamilyBuilder_;
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromFamily getDeleteFromFamily() {
      if (deleteFromFamilyBuilder_ == null) {
        if (mutationCase_ == 3) {
          return (com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_;
        }
        return com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance();
      } else {
        if (mutationCase_ == 3) {
          return deleteFromFamilyBuilder_.getMessage();
        }
        return com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    public Builder setDeleteFromFamily(com.google.bigtable.v1.Mutation.DeleteFromFamily value) {
      if (deleteFromFamilyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mutation_ = value;
        onChanged();
      } else {
        deleteFromFamilyBuilder_.setMessage(value);
      }
      mutationCase_ = 3;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    public Builder setDeleteFromFamily(
        com.google.bigtable.v1.Mutation.DeleteFromFamily.Builder builderForValue) {
      if (deleteFromFamilyBuilder_ == null) {
        mutation_ = builderForValue.build();
        onChanged();
      } else {
        deleteFromFamilyBuilder_.setMessage(builderForValue.build());
      }
      mutationCase_ = 3;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    public Builder mergeDeleteFromFamily(com.google.bigtable.v1.Mutation.DeleteFromFamily value) {
      if (deleteFromFamilyBuilder_ == null) {
        if (mutationCase_ == 3 &&
            mutation_ != com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance()) {
          mutation_ = com.google.bigtable.v1.Mutation.DeleteFromFamily.newBuilder((com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_)
              .mergeFrom(value).buildPartial();
        } else {
          mutation_ = value;
        }
        onChanged();
      } else {
        if (mutationCase_ == 3) {
          deleteFromFamilyBuilder_.mergeFrom(value);
        }
        deleteFromFamilyBuilder_.setMessage(value);
      }
      mutationCase_ = 3;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    public Builder clearDeleteFromFamily() {
      if (deleteFromFamilyBuilder_ == null) {
        if (mutationCase_ == 3) {
          mutationCase_ = 0;
          mutation_ = null;
          onChanged();
        }
      } else {
        if (mutationCase_ == 3) {
          mutationCase_ = 0;
          mutation_ = null;
        }
        deleteFromFamilyBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromFamily.Builder getDeleteFromFamilyBuilder() {
      return getDeleteFromFamilyFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromFamilyOrBuilder getDeleteFromFamilyOrBuilder() {
      if ((mutationCase_ == 3) && (deleteFromFamilyBuilder_ != null)) {
        return deleteFromFamilyBuilder_.getMessageOrBuilder();
      } else {
        if (mutationCase_ == 3) {
          return (com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_;
        }
        return com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromFamily delete_from_family = 3;</code>
     *
     * <pre>
     * Deletes cells from a column family.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.DeleteFromFamily, com.google.bigtable.v1.Mutation.DeleteFromFamily.Builder, com.google.bigtable.v1.Mutation.DeleteFromFamilyOrBuilder> 
        getDeleteFromFamilyFieldBuilder() {
      if (deleteFromFamilyBuilder_ == null) {
        if (!(mutationCase_ == 3)) {
          mutation_ = com.google.bigtable.v1.Mutation.DeleteFromFamily.getDefaultInstance();
        }
        deleteFromFamilyBuilder_ = new com.google.protobuf.SingleFieldBuilder<>(
                (com.google.bigtable.v1.Mutation.DeleteFromFamily) mutation_,
                getParentForChildren(),
                isClean());
        mutation_ = null;
      }
      mutationCase_ = 3;
      onChanged();;
      return deleteFromFamilyBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.DeleteFromRow, com.google.bigtable.v1.Mutation.DeleteFromRow.Builder, com.google.bigtable.v1.Mutation.DeleteFromRowOrBuilder> deleteFromRowBuilder_;
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromRow getDeleteFromRow() {
      if (deleteFromRowBuilder_ == null) {
        if (mutationCase_ == 4) {
          return (com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_;
        }
        return com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance();
      } else {
        if (mutationCase_ == 4) {
          return deleteFromRowBuilder_.getMessage();
        }
        return com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    public Builder setDeleteFromRow(com.google.bigtable.v1.Mutation.DeleteFromRow value) {
      if (deleteFromRowBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        mutation_ = value;
        onChanged();
      } else {
        deleteFromRowBuilder_.setMessage(value);
      }
      mutationCase_ = 4;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    public Builder setDeleteFromRow(
        com.google.bigtable.v1.Mutation.DeleteFromRow.Builder builderForValue) {
      if (deleteFromRowBuilder_ == null) {
        mutation_ = builderForValue.build();
        onChanged();
      } else {
        deleteFromRowBuilder_.setMessage(builderForValue.build());
      }
      mutationCase_ = 4;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    public Builder mergeDeleteFromRow(com.google.bigtable.v1.Mutation.DeleteFromRow value) {
      if (deleteFromRowBuilder_ == null) {
        if (mutationCase_ == 4 &&
            mutation_ != com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance()) {
          mutation_ = com.google.bigtable.v1.Mutation.DeleteFromRow.newBuilder((com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_)
              .mergeFrom(value).buildPartial();
        } else {
          mutation_ = value;
        }
        onChanged();
      } else {
        if (mutationCase_ == 4) {
          deleteFromRowBuilder_.mergeFrom(value);
        }
        deleteFromRowBuilder_.setMessage(value);
      }
      mutationCase_ = 4;
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    public Builder clearDeleteFromRow() {
      if (deleteFromRowBuilder_ == null) {
        if (mutationCase_ == 4) {
          mutationCase_ = 0;
          mutation_ = null;
          onChanged();
        }
      } else {
        if (mutationCase_ == 4) {
          mutationCase_ = 0;
          mutation_ = null;
        }
        deleteFromRowBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromRow.Builder getDeleteFromRowBuilder() {
      return getDeleteFromRowFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    public com.google.bigtable.v1.Mutation.DeleteFromRowOrBuilder getDeleteFromRowOrBuilder() {
      if ((mutationCase_ == 4) && (deleteFromRowBuilder_ != null)) {
        return deleteFromRowBuilder_.getMessageOrBuilder();
      } else {
        if (mutationCase_ == 4) {
          return (com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_;
        }
        return com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance();
      }
    }
    /**
     * <code>optional .google.bigtable.v1.Mutation.DeleteFromRow delete_from_row = 4;</code>
     *
     * <pre>
     * Deletes cells from the entire row.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.v1.Mutation.DeleteFromRow, com.google.bigtable.v1.Mutation.DeleteFromRow.Builder, com.google.bigtable.v1.Mutation.DeleteFromRowOrBuilder> 
        getDeleteFromRowFieldBuilder() {
      if (deleteFromRowBuilder_ == null) {
        if (!(mutationCase_ == 4)) {
          mutation_ = com.google.bigtable.v1.Mutation.DeleteFromRow.getDefaultInstance();
        }
        deleteFromRowBuilder_ = new com.google.protobuf.SingleFieldBuilder<>(
                (com.google.bigtable.v1.Mutation.DeleteFromRow) mutation_,
                getParentForChildren(),
                isClean());
        mutation_ = null;
      }
      mutationCase_ = 4;
      onChanged();;
      return deleteFromRowBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.bigtable.v1.Mutation)
  }

  // @@protoc_insertion_point(class_scope:google.bigtable.v1.Mutation)
  private static final com.google.bigtable.v1.Mutation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.bigtable.v1.Mutation();
  }

  public static com.google.bigtable.v1.Mutation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Mutation>
      PARSER = new com.google.protobuf.AbstractParser<Mutation>() {
    public Mutation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Mutation(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Mutation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Mutation> getParserForType() {
    return PARSER;
  }

  public com.google.bigtable.v1.Mutation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

