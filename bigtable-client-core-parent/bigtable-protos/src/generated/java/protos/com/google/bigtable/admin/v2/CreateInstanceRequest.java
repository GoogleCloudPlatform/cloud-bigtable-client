// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto

package com.google.bigtable.admin.v2;

/**
 * Protobuf type {@code google.bigtable.admin.v2.CreateInstanceRequest}
 *
 * <pre>
 * Request message for BigtableInstanceAdmin.CreateInstance.
 * </pre>
 */
public  final class CreateInstanceRequest extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:google.bigtable.admin.v2.CreateInstanceRequest)
    CreateInstanceRequestOrBuilder {
  // Use CreateInstanceRequest.newBuilder() to construct.
  private CreateInstanceRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private CreateInstanceRequest() {
    parent_ = "";
    instanceId_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private CreateInstanceRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            String s = input.readStringRequireUtf8();

            parent_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            instanceId_ = s;
            break;
          }
          case 26: {
            com.google.bigtable.admin.v2.Instance.Builder subBuilder = null;
            if (instance_ != null) {
              subBuilder = instance_.toBuilder();
            }
            instance_ = input.readMessage(com.google.bigtable.admin.v2.Instance.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(instance_);
              instance_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              clusters_ = com.google.protobuf.MapField.newMapField(
                  ClustersDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.bigtable.admin.v2.Cluster>
            clusters = input.readMessage(
                ClustersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            clusters_.getMutableMap().put(clusters.getKey(), clusters.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.bigtable.admin.v2.BigtableInstanceAdminProto.internal_static_google_bigtable_admin_v2_CreateInstanceRequest_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 4:
        return internalGetClusters();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.bigtable.admin.v2.BigtableInstanceAdminProto.internal_static_google_bigtable_admin_v2_CreateInstanceRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.bigtable.admin.v2.CreateInstanceRequest.class, com.google.bigtable.admin.v2.CreateInstanceRequest.Builder.class);
  }

  private int bitField0_;
  public static final int PARENT_FIELD_NUMBER = 1;
  private volatile java.lang.Object parent_;
  /**
   * <code>optional string parent = 1;</code>
   *
   * <pre>
   * The unique name of the project in which to create the new instance.
   * Values are of the form projects/&lt;project&gt;
   * </pre>
   */
  public java.lang.String getParent() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      parent_ = s;
      return s;
    }
  }
  /**
   * <code>optional string parent = 1;</code>
   *
   * <pre>
   * The unique name of the project in which to create the new instance.
   * Values are of the form projects/&lt;project&gt;
   * </pre>
   */
  public com.google.protobuf.ByteString
      getParentBytes() {
    java.lang.Object ref = parent_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      parent_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INSTANCE_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object instanceId_;
  /**
   * <code>optional string instance_id = 2;</code>
   *
   * <pre>
   * The id to be used when referring to the new instance within its project,
   * e.g. just the "myinstance" section of the full name
   * "projects/myproject/instances/myinstance"
   * </pre>
   */
  public java.lang.String getInstanceId() {
    java.lang.Object ref = instanceId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      instanceId_ = s;
      return s;
    }
  }
  /**
   * <code>optional string instance_id = 2;</code>
   *
   * <pre>
   * The id to be used when referring to the new instance within its project,
   * e.g. just the "myinstance" section of the full name
   * "projects/myproject/instances/myinstance"
   * </pre>
   */
  public com.google.protobuf.ByteString
      getInstanceIdBytes() {
    java.lang.Object ref = instanceId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      instanceId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INSTANCE_FIELD_NUMBER = 3;
  private com.google.bigtable.admin.v2.Instance instance_;
  /**
   * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
   *
   * <pre>
   * The instance to create.
   * Fields marked "&#64;OutputOnly" must be left blank.
   * </pre>
   */
  public boolean hasInstance() {
    return instance_ != null;
  }
  /**
   * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
   *
   * <pre>
   * The instance to create.
   * Fields marked "&#64;OutputOnly" must be left blank.
   * </pre>
   */
  public com.google.bigtable.admin.v2.Instance getInstance() {
    return instance_ == null ? com.google.bigtable.admin.v2.Instance.getDefaultInstance() : instance_;
  }
  /**
   * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
   *
   * <pre>
   * The instance to create.
   * Fields marked "&#64;OutputOnly" must be left blank.
   * </pre>
   */
  public com.google.bigtable.admin.v2.InstanceOrBuilder getInstanceOrBuilder() {
    return getInstance();
  }

  public static final int CLUSTERS_FIELD_NUMBER = 4;
  private static final class ClustersDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.bigtable.admin.v2.Cluster> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.bigtable.admin.v2.Cluster>newDefaultInstance(
                com.google.bigtable.admin.v2.BigtableInstanceAdminProto.internal_static_google_bigtable_admin_v2_CreateInstanceRequest_ClustersEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.bigtable.admin.v2.Cluster.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.bigtable.admin.v2.Cluster> clusters_;
  private com.google.protobuf.MapField<java.lang.String, com.google.bigtable.admin.v2.Cluster>
  internalGetClusters() {
    if (clusters_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ClustersDefaultEntryHolder.defaultEntry);
   }
    return clusters_;
  }
  /**
   * <code>map&lt;string, .google.bigtable.admin.v2.Cluster&gt; clusters = 4;</code>
   *
   * <pre>
   * The clusters to be created within the instance, mapped by desired
   * cluster ID (e.g. just the "mycluster" part of the full name
   * "projects/myproject/instances/myinstance/clusters/mycluster").
   * Fields marked "&#64;OutputOnly" must be left blank.
   * Currently exactly one cluster must be specified.
   * </pre>
   */

  public java.util.Map<java.lang.String, com.google.bigtable.admin.v2.Cluster> getClusters() {
    return internalGetClusters().getMap();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getParentBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, parent_);
    }
    if (!getInstanceIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, instanceId_);
    }
    if (instance_ != null) {
      output.writeMessage(3, getInstance());
    }
    for (java.util.Map.Entry<java.lang.String, com.google.bigtable.admin.v2.Cluster> entry
         : internalGetClusters().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.bigtable.admin.v2.Cluster>
      clusters = ClustersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      output.writeMessage(4, clusters);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getParentBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, parent_);
    }
    if (!getInstanceIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, instanceId_);
    }
    if (instance_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getInstance());
    }
    for (java.util.Map.Entry<java.lang.String, com.google.bigtable.admin.v2.Cluster> entry
         : internalGetClusters().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.bigtable.admin.v2.Cluster>
      clusters = ClustersDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, clusters);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.admin.v2.CreateInstanceRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.bigtable.admin.v2.CreateInstanceRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.bigtable.admin.v2.CreateInstanceRequest}
   *
   * <pre>
   * Request message for BigtableInstanceAdmin.CreateInstance.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.bigtable.admin.v2.CreateInstanceRequest)
      com.google.bigtable.admin.v2.CreateInstanceRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.admin.v2.BigtableInstanceAdminProto.internal_static_google_bigtable_admin_v2_CreateInstanceRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetClusters();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetMutableClusters();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.admin.v2.BigtableInstanceAdminProto.internal_static_google_bigtable_admin_v2_CreateInstanceRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.admin.v2.CreateInstanceRequest.class, com.google.bigtable.admin.v2.CreateInstanceRequest.Builder.class);
    }

    // Construct using com.google.bigtable.admin.v2.CreateInstanceRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      parent_ = "";

      instanceId_ = "";

      if (instanceBuilder_ == null) {
        instance_ = null;
      } else {
        instance_ = null;
        instanceBuilder_ = null;
      }
      internalGetMutableClusters().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.bigtable.admin.v2.BigtableInstanceAdminProto.internal_static_google_bigtable_admin_v2_CreateInstanceRequest_descriptor;
    }

    public com.google.bigtable.admin.v2.CreateInstanceRequest getDefaultInstanceForType() {
      return com.google.bigtable.admin.v2.CreateInstanceRequest.getDefaultInstance();
    }

    public com.google.bigtable.admin.v2.CreateInstanceRequest build() {
      com.google.bigtable.admin.v2.CreateInstanceRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.bigtable.admin.v2.CreateInstanceRequest buildPartial() {
      com.google.bigtable.admin.v2.CreateInstanceRequest result = new com.google.bigtable.admin.v2.CreateInstanceRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.parent_ = parent_;
      result.instanceId_ = instanceId_;
      if (instanceBuilder_ == null) {
        result.instance_ = instance_;
      } else {
        result.instance_ = instanceBuilder_.build();
      }
      result.clusters_ = internalGetClusters();
      result.clusters_.makeImmutable();
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.bigtable.admin.v2.CreateInstanceRequest) {
        return mergeFrom((com.google.bigtable.admin.v2.CreateInstanceRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.bigtable.admin.v2.CreateInstanceRequest other) {
      if (other == com.google.bigtable.admin.v2.CreateInstanceRequest.getDefaultInstance()) return this;
      if (!other.getParent().isEmpty()) {
        parent_ = other.parent_;
        onChanged();
      }
      if (!other.getInstanceId().isEmpty()) {
        instanceId_ = other.instanceId_;
        onChanged();
      }
      if (other.hasInstance()) {
        mergeInstance(other.getInstance());
      }
      internalGetMutableClusters().mergeFrom(
          other.internalGetClusters());
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.bigtable.admin.v2.CreateInstanceRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.bigtable.admin.v2.CreateInstanceRequest) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object parent_ = "";
    /**
     * <code>optional string parent = 1;</code>
     *
     * <pre>
     * The unique name of the project in which to create the new instance.
     * Values are of the form projects/&lt;project&gt;
     * </pre>
     */
    public java.lang.String getParent() {
      java.lang.Object ref = parent_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parent_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string parent = 1;</code>
     *
     * <pre>
     * The unique name of the project in which to create the new instance.
     * Values are of the form projects/&lt;project&gt;
     * </pre>
     */
    public com.google.protobuf.ByteString
        getParentBytes() {
      java.lang.Object ref = parent_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parent_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string parent = 1;</code>
     *
     * <pre>
     * The unique name of the project in which to create the new instance.
     * Values are of the form projects/&lt;project&gt;
     * </pre>
     */
    public Builder setParent(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      parent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string parent = 1;</code>
     *
     * <pre>
     * The unique name of the project in which to create the new instance.
     * Values are of the form projects/&lt;project&gt;
     * </pre>
     */
    public Builder clearParent() {
      
      parent_ = getDefaultInstance().getParent();
      onChanged();
      return this;
    }
    /**
     * <code>optional string parent = 1;</code>
     *
     * <pre>
     * The unique name of the project in which to create the new instance.
     * Values are of the form projects/&lt;project&gt;
     * </pre>
     */
    public Builder setParentBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      parent_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object instanceId_ = "";
    /**
     * <code>optional string instance_id = 2;</code>
     *
     * <pre>
     * The id to be used when referring to the new instance within its project,
     * e.g. just the "myinstance" section of the full name
     * "projects/myproject/instances/myinstance"
     * </pre>
     */
    public java.lang.String getInstanceId() {
      java.lang.Object ref = instanceId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        instanceId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string instance_id = 2;</code>
     *
     * <pre>
     * The id to be used when referring to the new instance within its project,
     * e.g. just the "myinstance" section of the full name
     * "projects/myproject/instances/myinstance"
     * </pre>
     */
    public com.google.protobuf.ByteString
        getInstanceIdBytes() {
      java.lang.Object ref = instanceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        instanceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string instance_id = 2;</code>
     *
     * <pre>
     * The id to be used when referring to the new instance within its project,
     * e.g. just the "myinstance" section of the full name
     * "projects/myproject/instances/myinstance"
     * </pre>
     */
    public Builder setInstanceId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      instanceId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string instance_id = 2;</code>
     *
     * <pre>
     * The id to be used when referring to the new instance within its project,
     * e.g. just the "myinstance" section of the full name
     * "projects/myproject/instances/myinstance"
     * </pre>
     */
    public Builder clearInstanceId() {
      
      instanceId_ = getDefaultInstance().getInstanceId();
      onChanged();
      return this;
    }
    /**
     * <code>optional string instance_id = 2;</code>
     *
     * <pre>
     * The id to be used when referring to the new instance within its project,
     * e.g. just the "myinstance" section of the full name
     * "projects/myproject/instances/myinstance"
     * </pre>
     */
    public Builder setInstanceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      instanceId_ = value;
      onChanged();
      return this;
    }

    private com.google.bigtable.admin.v2.Instance instance_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.admin.v2.Instance, com.google.bigtable.admin.v2.Instance.Builder, com.google.bigtable.admin.v2.InstanceOrBuilder> instanceBuilder_;
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public boolean hasInstance() {
      return instanceBuilder_ != null || instance_ != null;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public com.google.bigtable.admin.v2.Instance getInstance() {
      if (instanceBuilder_ == null) {
        return instance_ == null ? com.google.bigtable.admin.v2.Instance.getDefaultInstance() : instance_;
      } else {
        return instanceBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public Builder setInstance(com.google.bigtable.admin.v2.Instance value) {
      if (instanceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        instance_ = value;
        onChanged();
      } else {
        instanceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public Builder setInstance(
        com.google.bigtable.admin.v2.Instance.Builder builderForValue) {
      if (instanceBuilder_ == null) {
        instance_ = builderForValue.build();
        onChanged();
      } else {
        instanceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public Builder mergeInstance(com.google.bigtable.admin.v2.Instance value) {
      if (instanceBuilder_ == null) {
        if (instance_ != null) {
          instance_ =
            com.google.bigtable.admin.v2.Instance.newBuilder(instance_).mergeFrom(value).buildPartial();
        } else {
          instance_ = value;
        }
        onChanged();
      } else {
        instanceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public Builder clearInstance() {
      if (instanceBuilder_ == null) {
        instance_ = null;
        onChanged();
      } else {
        instance_ = null;
        instanceBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public com.google.bigtable.admin.v2.Instance.Builder getInstanceBuilder() {
      
      onChanged();
      return getInstanceFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    public com.google.bigtable.admin.v2.InstanceOrBuilder getInstanceOrBuilder() {
      if (instanceBuilder_ != null) {
        return instanceBuilder_.getMessageOrBuilder();
      } else {
        return instance_ == null ?
            com.google.bigtable.admin.v2.Instance.getDefaultInstance() : instance_;
      }
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Instance instance = 3;</code>
     *
     * <pre>
     * The instance to create.
     * Fields marked "&#64;OutputOnly" must be left blank.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.admin.v2.Instance, com.google.bigtable.admin.v2.Instance.Builder, com.google.bigtable.admin.v2.InstanceOrBuilder> 
        getInstanceFieldBuilder() {
      if (instanceBuilder_ == null) {
        instanceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.bigtable.admin.v2.Instance, com.google.bigtable.admin.v2.Instance.Builder, com.google.bigtable.admin.v2.InstanceOrBuilder>(
                getInstance(),
                getParentForChildren(),
                isClean());
        instance_ = null;
      }
      return instanceBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.bigtable.admin.v2.Cluster> clusters_;
    private com.google.protobuf.MapField<java.lang.String, com.google.bigtable.admin.v2.Cluster>
    internalGetClusters() {
      if (clusters_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ClustersDefaultEntryHolder.defaultEntry);
     }
      return clusters_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.bigtable.admin.v2.Cluster>
    internalGetMutableClusters() {
      onChanged();;
      if (clusters_ == null) {
        clusters_ = com.google.protobuf.MapField.newMapField(
            ClustersDefaultEntryHolder.defaultEntry);
      }
      if (!clusters_.isMutable()) {
        clusters_ = clusters_.copy();
      }
      return clusters_;
    }
    /**
     * <code>map&lt;string, .google.bigtable.admin.v2.Cluster&gt; clusters = 4;</code>
     *
     * <pre>
     * The clusters to be created within the instance, mapped by desired
     * cluster ID (e.g. just the "mycluster" part of the full name
     * "projects/myproject/instances/myinstance/clusters/mycluster").
     * Fields marked "&#64;OutputOnly" must be left blank.
     * Currently exactly one cluster must be specified.
     * </pre>
     */
    public java.util.Map<java.lang.String, com.google.bigtable.admin.v2.Cluster> getClusters() {
      return internalGetClusters().getMap();
    }
    /**
     * <code>map&lt;string, .google.bigtable.admin.v2.Cluster&gt; clusters = 4;</code>
     *
     * <pre>
     * The clusters to be created within the instance, mapped by desired
     * cluster ID (e.g. just the "mycluster" part of the full name
     * "projects/myproject/instances/myinstance/clusters/mycluster").
     * Fields marked "&#64;OutputOnly" must be left blank.
     * Currently exactly one cluster must be specified.
     * </pre>
     */
    public java.util.Map<java.lang.String, com.google.bigtable.admin.v2.Cluster>
    getMutableClusters() {
      return internalGetMutableClusters().getMutableMap();
    }
    /**
     * <code>map&lt;string, .google.bigtable.admin.v2.Cluster&gt; clusters = 4;</code>
     *
     * <pre>
     * The clusters to be created within the instance, mapped by desired
     * cluster ID (e.g. just the "mycluster" part of the full name
     * "projects/myproject/instances/myinstance/clusters/mycluster").
     * Fields marked "&#64;OutputOnly" must be left blank.
     * Currently exactly one cluster must be specified.
     * </pre>
     */
    public Builder putAllClusters(
        java.util.Map<java.lang.String, com.google.bigtable.admin.v2.Cluster> values) {
      getMutableClusters().putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.bigtable.admin.v2.CreateInstanceRequest)
  }

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateInstanceRequest)
  private static final com.google.bigtable.admin.v2.CreateInstanceRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.bigtable.admin.v2.CreateInstanceRequest();
  }

  public static com.google.bigtable.admin.v2.CreateInstanceRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreateInstanceRequest>
      PARSER = new com.google.protobuf.AbstractParser<CreateInstanceRequest>() {
    public CreateInstanceRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new CreateInstanceRequest(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<CreateInstanceRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreateInstanceRequest> getParserForType() {
    return PARSER;
  }

  public com.google.bigtable.admin.v2.CreateInstanceRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

