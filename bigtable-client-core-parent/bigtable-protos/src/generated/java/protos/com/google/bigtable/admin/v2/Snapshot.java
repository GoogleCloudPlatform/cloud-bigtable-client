// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/table.proto

package com.google.bigtable.admin.v2;

/**
 * Protobuf type {@code google.bigtable.admin.v2.Snapshot}
 *
 * <pre>
 * A snapshot of a table at a particular time. A snapshot can be used as a
 * checkpoint for data restoration or a data source for a new table.
 * </pre>
 */
public  final class Snapshot extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:google.bigtable.admin.v2.Snapshot)
    SnapshotOrBuilder {
  // Use Snapshot.newBuilder() to construct.
  private Snapshot(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Snapshot() {
    name_ = "";
    dataSizeBytes_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Snapshot(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.google.bigtable.admin.v2.Table.Builder subBuilder = null;
            if (sourceTable_ != null) {
              subBuilder = sourceTable_.toBuilder();
            }
            sourceTable_ = input.readMessage(com.google.bigtable.admin.v2.Table.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(sourceTable_);
              sourceTable_ = subBuilder.buildPartial();
            }

            break;
          }
          case 24: {

            dataSizeBytes_ = input.readInt64();
            break;
          }
          case 34: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (createTime_ != null) {
              subBuilder = createTime_.toBuilder();
            }
            createTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(createTime_);
              createTime_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (deleteTime_ != null) {
              subBuilder = deleteTime_.toBuilder();
            }
            deleteTime_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(deleteTime_);
              deleteTime_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.bigtable.admin.v2.TableProto.internal_static_google_bigtable_admin_v2_Snapshot_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.bigtable.admin.v2.TableProto.internal_static_google_bigtable_admin_v2_Snapshot_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.bigtable.admin.v2.Snapshot.class, com.google.bigtable.admin.v2.Snapshot.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The unique name of the snapshot.
   * Values are of the form
   * `projects/&lt;project&gt;/instances/&lt;instance&gt;/clusters/&lt;cluster&gt;/snapshots/&lt;snapshot&gt;`.
   * </pre>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The unique name of the snapshot.
   * Values are of the form
   * `projects/&lt;project&gt;/instances/&lt;instance&gt;/clusters/&lt;cluster&gt;/snapshots/&lt;snapshot&gt;`.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SOURCE_TABLE_FIELD_NUMBER = 2;
  private com.google.bigtable.admin.v2.Table sourceTable_;
  /**
   * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The source table at the time the snapshot was taken.
   * </pre>
   */
  public boolean hasSourceTable() {
    return sourceTable_ != null;
  }
  /**
   * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The source table at the time the snapshot was taken.
   * </pre>
   */
  public com.google.bigtable.admin.v2.Table getSourceTable() {
    return sourceTable_ == null ? com.google.bigtable.admin.v2.Table.getDefaultInstance() : sourceTable_;
  }
  /**
   * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The source table at the time the snapshot was taken.
   * </pre>
   */
  public com.google.bigtable.admin.v2.TableOrBuilder getSourceTableOrBuilder() {
    return getSourceTable();
  }

  public static final int DATA_SIZE_BYTES_FIELD_NUMBER = 3;
  private long dataSizeBytes_;
  /**
   * <code>optional int64 data_size_bytes = 3;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The size of the data in the source table at the time the snapshot was
   * taken.
   * </pre>
   */
  public long getDataSizeBytes() {
    return dataSizeBytes_;
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The time when the snapshot is created.
   * </pre>
   */
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The time when the snapshot is created.
   * </pre>
   */
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The time when the snapshot is created.
   * </pre>
   */
  public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
    return getCreateTime();
  }

  public static final int DELETE_TIME_FIELD_NUMBER = 5;
  private com.google.protobuf.Timestamp deleteTime_;
  /**
   * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The time when the snapshot will be deleted. The maximum amount of time a
   * snapshot can stay active is 365 days. If 'ttl' is not specified,
   * the default maximum of 365 days will be used.
   * </pre>
   */
  public boolean hasDeleteTime() {
    return deleteTime_ != null;
  }
  /**
   * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The time when the snapshot will be deleted. The maximum amount of time a
   * snapshot can stay active is 365 days. If 'ttl' is not specified,
   * the default maximum of 365 days will be used.
   * </pre>
   */
  public com.google.protobuf.Timestamp getDeleteTime() {
    return deleteTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : deleteTime_;
  }
  /**
   * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
   *
   * <pre>
   * (`OutputOnly`)
   * The time when the snapshot will be deleted. The maximum amount of time a
   * snapshot can stay active is 365 days. If 'ttl' is not specified,
   * the default maximum of 365 days will be used.
   * </pre>
   */
  public com.google.protobuf.TimestampOrBuilder getDeleteTimeOrBuilder() {
    return getDeleteTime();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    if (sourceTable_ != null) {
      output.writeMessage(2, getSourceTable());
    }
    if (dataSizeBytes_ != 0L) {
      output.writeInt64(3, dataSizeBytes_);
    }
    if (createTime_ != null) {
      output.writeMessage(4, getCreateTime());
    }
    if (deleteTime_ != null) {
      output.writeMessage(5, getDeleteTime());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    if (sourceTable_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getSourceTable());
    }
    if (dataSizeBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, dataSizeBytes_);
    }
    if (createTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getCreateTime());
    }
    if (deleteTime_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getDeleteTime());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.bigtable.admin.v2.Snapshot parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.bigtable.admin.v2.Snapshot prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.bigtable.admin.v2.Snapshot}
   *
   * <pre>
   * A snapshot of a table at a particular time. A snapshot can be used as a
   * checkpoint for data restoration or a data source for a new table.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.bigtable.admin.v2.Snapshot)
      com.google.bigtable.admin.v2.SnapshotOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.bigtable.admin.v2.TableProto.internal_static_google_bigtable_admin_v2_Snapshot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.bigtable.admin.v2.TableProto.internal_static_google_bigtable_admin_v2_Snapshot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.bigtable.admin.v2.Snapshot.class, com.google.bigtable.admin.v2.Snapshot.Builder.class);
    }

    // Construct using com.google.bigtable.admin.v2.Snapshot.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      name_ = "";

      if (sourceTableBuilder_ == null) {
        sourceTable_ = null;
      } else {
        sourceTable_ = null;
        sourceTableBuilder_ = null;
      }
      dataSizeBytes_ = 0L;

      if (createTimeBuilder_ == null) {
        createTime_ = null;
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }
      if (deleteTimeBuilder_ == null) {
        deleteTime_ = null;
      } else {
        deleteTime_ = null;
        deleteTimeBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.bigtable.admin.v2.TableProto.internal_static_google_bigtable_admin_v2_Snapshot_descriptor;
    }

    public com.google.bigtable.admin.v2.Snapshot getDefaultInstanceForType() {
      return com.google.bigtable.admin.v2.Snapshot.getDefaultInstance();
    }

    public com.google.bigtable.admin.v2.Snapshot build() {
      com.google.bigtable.admin.v2.Snapshot result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.bigtable.admin.v2.Snapshot buildPartial() {
      com.google.bigtable.admin.v2.Snapshot result = new com.google.bigtable.admin.v2.Snapshot(this);
      result.name_ = name_;
      if (sourceTableBuilder_ == null) {
        result.sourceTable_ = sourceTable_;
      } else {
        result.sourceTable_ = sourceTableBuilder_.build();
      }
      result.dataSizeBytes_ = dataSizeBytes_;
      if (createTimeBuilder_ == null) {
        result.createTime_ = createTime_;
      } else {
        result.createTime_ = createTimeBuilder_.build();
      }
      if (deleteTimeBuilder_ == null) {
        result.deleteTime_ = deleteTime_;
      } else {
        result.deleteTime_ = deleteTimeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.bigtable.admin.v2.Snapshot) {
        return mergeFrom((com.google.bigtable.admin.v2.Snapshot)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.bigtable.admin.v2.Snapshot other) {
      if (other == com.google.bigtable.admin.v2.Snapshot.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasSourceTable()) {
        mergeSourceTable(other.getSourceTable());
      }
      if (other.getDataSizeBytes() != 0L) {
        setDataSizeBytes(other.getDataSizeBytes());
      }
      if (other.hasCreateTime()) {
        mergeCreateTime(other.getCreateTime());
      }
      if (other.hasDeleteTime()) {
        mergeDeleteTime(other.getDeleteTime());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.bigtable.admin.v2.Snapshot parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.bigtable.admin.v2.Snapshot) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The unique name of the snapshot.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/clusters/&lt;cluster&gt;/snapshots/&lt;snapshot&gt;`.
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The unique name of the snapshot.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/clusters/&lt;cluster&gt;/snapshots/&lt;snapshot&gt;`.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The unique name of the snapshot.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/clusters/&lt;cluster&gt;/snapshots/&lt;snapshot&gt;`.
     * </pre>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The unique name of the snapshot.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/clusters/&lt;cluster&gt;/snapshots/&lt;snapshot&gt;`.
     * </pre>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The unique name of the snapshot.
     * Values are of the form
     * `projects/&lt;project&gt;/instances/&lt;instance&gt;/clusters/&lt;cluster&gt;/snapshots/&lt;snapshot&gt;`.
     * </pre>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private com.google.bigtable.admin.v2.Table sourceTable_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.admin.v2.Table, com.google.bigtable.admin.v2.Table.Builder, com.google.bigtable.admin.v2.TableOrBuilder> sourceTableBuilder_;
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public boolean hasSourceTable() {
      return sourceTableBuilder_ != null || sourceTable_ != null;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public com.google.bigtable.admin.v2.Table getSourceTable() {
      if (sourceTableBuilder_ == null) {
        return sourceTable_ == null ? com.google.bigtable.admin.v2.Table.getDefaultInstance() : sourceTable_;
      } else {
        return sourceTableBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public Builder setSourceTable(com.google.bigtable.admin.v2.Table value) {
      if (sourceTableBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sourceTable_ = value;
        onChanged();
      } else {
        sourceTableBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public Builder setSourceTable(
        com.google.bigtable.admin.v2.Table.Builder builderForValue) {
      if (sourceTableBuilder_ == null) {
        sourceTable_ = builderForValue.build();
        onChanged();
      } else {
        sourceTableBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public Builder mergeSourceTable(com.google.bigtable.admin.v2.Table value) {
      if (sourceTableBuilder_ == null) {
        if (sourceTable_ != null) {
          sourceTable_ =
            com.google.bigtable.admin.v2.Table.newBuilder(sourceTable_).mergeFrom(value).buildPartial();
        } else {
          sourceTable_ = value;
        }
        onChanged();
      } else {
        sourceTableBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public Builder clearSourceTable() {
      if (sourceTableBuilder_ == null) {
        sourceTable_ = null;
        onChanged();
      } else {
        sourceTable_ = null;
        sourceTableBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public com.google.bigtable.admin.v2.Table.Builder getSourceTableBuilder() {
      
      onChanged();
      return getSourceTableFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    public com.google.bigtable.admin.v2.TableOrBuilder getSourceTableOrBuilder() {
      if (sourceTableBuilder_ != null) {
        return sourceTableBuilder_.getMessageOrBuilder();
      } else {
        return sourceTable_ == null ?
            com.google.bigtable.admin.v2.Table.getDefaultInstance() : sourceTable_;
      }
    }
    /**
     * <code>optional .google.bigtable.admin.v2.Table source_table = 2;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The source table at the time the snapshot was taken.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.bigtable.admin.v2.Table, com.google.bigtable.admin.v2.Table.Builder, com.google.bigtable.admin.v2.TableOrBuilder> 
        getSourceTableFieldBuilder() {
      if (sourceTableBuilder_ == null) {
        sourceTableBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.bigtable.admin.v2.Table, com.google.bigtable.admin.v2.Table.Builder, com.google.bigtable.admin.v2.TableOrBuilder>(
                getSourceTable(),
                getParentForChildren(),
                isClean());
        sourceTable_ = null;
      }
      return sourceTableBuilder_;
    }

    private long dataSizeBytes_ ;
    /**
     * <code>optional int64 data_size_bytes = 3;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The size of the data in the source table at the time the snapshot was
     * taken.
     * </pre>
     */
    public long getDataSizeBytes() {
      return dataSizeBytes_;
    }
    /**
     * <code>optional int64 data_size_bytes = 3;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The size of the data in the source table at the time the snapshot was
     * taken.
     * </pre>
     */
    public Builder setDataSizeBytes(long value) {
      
      dataSizeBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 data_size_bytes = 3;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The size of the data in the source table at the time the snapshot was
     * taken.
     * </pre>
     */
    public Builder clearDataSizeBytes() {
      
      dataSizeBytes_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp createTime_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> createTimeBuilder_;
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public boolean hasCreateTime() {
      return createTimeBuilder_ != null || createTime_ != null;
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public com.google.protobuf.Timestamp getCreateTime() {
      if (createTimeBuilder_ == null) {
        return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      } else {
        return createTimeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createTime_ = value;
        onChanged();
      } else {
        createTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (createTimeBuilder_ == null) {
        createTime_ = builderForValue.build();
        onChanged();
      } else {
        createTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      if (createTimeBuilder_ == null) {
        if (createTime_ != null) {
          createTime_ =
            com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
        } else {
          createTime_ = value;
        }
        onChanged();
      } else {
        createTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public Builder clearCreateTime() {
      if (createTimeBuilder_ == null) {
        createTime_ = null;
        onChanged();
      } else {
        createTime_ = null;
        createTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public com.google.protobuf.Timestamp.Builder getCreateTimeBuilder() {
      
      onChanged();
      return getCreateTimeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    public com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder() {
      if (createTimeBuilder_ != null) {
        return createTimeBuilder_.getMessageOrBuilder();
      } else {
        return createTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
      }
    }
    /**
     * <code>optional .google.protobuf.Timestamp create_time = 4;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot is created.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getCreateTimeFieldBuilder() {
      if (createTimeBuilder_ == null) {
        createTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getCreateTime(),
                getParentForChildren(),
                isClean());
        createTime_ = null;
      }
      return createTimeBuilder_;
    }

    private com.google.protobuf.Timestamp deleteTime_ = null;
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> deleteTimeBuilder_;
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public boolean hasDeleteTime() {
      return deleteTimeBuilder_ != null || deleteTime_ != null;
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public com.google.protobuf.Timestamp getDeleteTime() {
      if (deleteTimeBuilder_ == null) {
        return deleteTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : deleteTime_;
      } else {
        return deleteTimeBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public Builder setDeleteTime(com.google.protobuf.Timestamp value) {
      if (deleteTimeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deleteTime_ = value;
        onChanged();
      } else {
        deleteTimeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public Builder setDeleteTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (deleteTimeBuilder_ == null) {
        deleteTime_ = builderForValue.build();
        onChanged();
      } else {
        deleteTimeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public Builder mergeDeleteTime(com.google.protobuf.Timestamp value) {
      if (deleteTimeBuilder_ == null) {
        if (deleteTime_ != null) {
          deleteTime_ =
            com.google.protobuf.Timestamp.newBuilder(deleteTime_).mergeFrom(value).buildPartial();
        } else {
          deleteTime_ = value;
        }
        onChanged();
      } else {
        deleteTimeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public Builder clearDeleteTime() {
      if (deleteTimeBuilder_ == null) {
        deleteTime_ = null;
        onChanged();
      } else {
        deleteTime_ = null;
        deleteTimeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public com.google.protobuf.Timestamp.Builder getDeleteTimeBuilder() {
      
      onChanged();
      return getDeleteTimeFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    public com.google.protobuf.TimestampOrBuilder getDeleteTimeOrBuilder() {
      if (deleteTimeBuilder_ != null) {
        return deleteTimeBuilder_.getMessageOrBuilder();
      } else {
        return deleteTime_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : deleteTime_;
      }
    }
    /**
     * <code>optional .google.protobuf.Timestamp delete_time = 5;</code>
     *
     * <pre>
     * (`OutputOnly`)
     * The time when the snapshot will be deleted. The maximum amount of time a
     * snapshot can stay active is 365 days. If 'ttl' is not specified,
     * the default maximum of 365 days will be used.
     * </pre>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getDeleteTimeFieldBuilder() {
      if (deleteTimeBuilder_ == null) {
        deleteTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getDeleteTime(),
                getParentForChildren(),
                isClean());
        deleteTime_ = null;
      }
      return deleteTimeBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.bigtable.admin.v2.Snapshot)
  }

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.Snapshot)
  private static final com.google.bigtable.admin.v2.Snapshot DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.bigtable.admin.v2.Snapshot();
  }

  public static com.google.bigtable.admin.v2.Snapshot getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Snapshot>
      PARSER = new com.google.protobuf.AbstractParser<Snapshot>() {
    public Snapshot parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new Snapshot(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<Snapshot> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Snapshot> getParserForType() {
    return PARSER;
  }

  public com.google.bigtable.admin.v2.Snapshot getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

